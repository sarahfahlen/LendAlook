@using Core
@using LALapp.Components
@inject NavigationManager navManager
@inject ILoginService lService
@inject IClosetService cService
@page "/closetPage"
<h3>closetPage</h3>

<ModalDialog @ref="@addToDialog" Title="Tilføj nyt stykke tøj">
    <EditForm Model="@aItem" OnValidSubmit="@HandleSubmit" class="row p-3">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="col-md-6 mb-3">
            <label for="kategori"> Kategori</label>
            <InputSelect id="kategori" @bind-Value="aItem.type" class="form-control">
                @foreach (var anOption in options)
                {
                    <option value="@anOption">@anOption</option>
                }
            </InputSelect>
        </div>
        <div class="col-md-6 mb-3">
            <label for="Størrelse">Størrelse</label>
            <InputText id="Størrelse" @bind-Value="aItem.størrelse" class="form-control" />
        </div>
        <div class="col-md-4 mb-3">
            <label for="Farve">Farve</label>
            <InputText id="Farve" @bind-Value="aItem.farve" class="form-control" />
        </div>
        <div class="col-md-4 mb-3">
            <label for="Mærke">Mærke</label>
            <InputText id="Mærke" @bind-Value="aItem.mærke" class="form-control" />
        </div>
        <div class="col-md-1 mb-3">
            <label for="Reserveret">Reserveret?</label>
            <InputCheckbox id="Reserveret" @bind-Value="aItem.reserveret" class="form-control" />
        </div>
        <div class="col-md-12 mb-3">
            <label for="Description">Beskrivelse</label>
            <InputTextArea id="Description" @bind-Value="aItem.beskrivelse" class="form-control" />
        </div>
        <div class="col-12 mb-3">
            <button type="submit">Tilføj</button>
        </div>
    </EditForm>
</ModalDialog>


<table class="table table-striped">
    <thead>
    <tr> <!-- her skal noget filter på-->
        <th>Type</th>
        <th>Størrelse</th>
        <th>Farve</th>
        <th>Mærke</th>
        <th>Beskrivelse</th>
        <th>Tilgængelig?</th>
        <!-- her skal tilføjes kontaktoplysninger og billede -->
    </tr>
    </thead> 
    <tbody>
    @foreach (var item in items)
    {
        Console.WriteLine($"Item Owner ID: {item.ejer?.id}, Logged-in ID: {loggedIn?.id}");
        <tr>
            <td>@item.type</td>
            <td>@item.størrelse</td>
            <td>@item.farve</td>
            <td>@item.mærke</td>
            <td>@item.beskrivelse</td>
            <td>@item.reserveret
            @if (item.reserveret == true)
            {
                <p>Ledig igen d. @item.slutDato;</p>
            }
                </td>
            <!-- her skal tilføjes kontaktoplysninger og billede -->
            
            @if (loggedIn?.id == item.ejer?.id)
            {
                <td><button @onclick="() => Delete(item)">Slet denne item</button></td>
                <td><button @onclick="() => Update(item)">Rediger denne item</button></td>
            }
            else
            {
                @if (item.reserveret == false)
                {
                    <td><button @onclick="() => Book(item)">Book denne item</button></td>
                }
            }
        </tr>
    }
    </tbody>
</table>

<button @onclick="Open">Tilføj nyt tøj</button>

<ModalDialog @ref="@bookDialog" Title="Vælg afleveringsdato">
    <div class="p-3">
        <label for="slutDato">Afleveringsdato:</label>
        <InputDate @bind-Value="valgtDato" id="slutDato" class="form-control" />
        <div class="mt-3">
            <button @onclick="BekræftBooking">Bekræft</button>
        </div>
    </div>
</ModalDialog>

@code {
    ModalDialog? addToDialog { get; set; }
    private tøj aItem = new();
    private string[] options = {"Overdele", "Bukser", "Nederdele", "Kjoler", "Andet" };
    private List<tøj> items = new();
    private bool isEditMode = false; //bruges til at skelne mellem tilføj og rediger item
    private bruger? loggedIn; //gemmer den bruger som er logget ind
    ModalDialog? bookDialog { get; set; }
    private DateOnly valgtDato = DateOnly.FromDateTime(DateTime.Today);
    private tøj? valgtItem;

    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();
        if (loggedIn == null)
        {
            navManager.NavigateTo("loginPage/closetPage");
            return;
        }
        await GetAll();
    }
    private void Open()
    {
        isEditMode = false;
        aItem = new tøj(); 
        addToDialog.Open();
    }
    private async Task GetAll()
    {
        tøj[] items2 = await cService.GetAll();
        items = items2.ToList();
    }
    
    private async Task HandleSubmit()
    {
        if (isEditMode == true) //hvis vi er i redigerings "mode" sker dette
        {
            await cService.UpdateItem(aItem);
        }
        else //hvis vi er i tilføjelses "mode" sker dette
        {
            items.Add(aItem); //bethandler visningen
            aItem.ejer = loggedIn;
            await cService.AddItem(aItem);   
        }
        aItem = new tøj();
        addToDialog.Close();
        await GetAll();
    }
    
    private async Task Delete(tøj item)
    {
        items.Remove(item); //behandler visningen
        await cService.DeleteById(item.id); 
    }
    
    private async Task Update(tøj item)
    {
        isEditMode = true;
        aItem = item;
        addToDialog.Open();
    }
    private async Task Book(tøj item)
    {
        valgtItem = item;
        valgtDato = DateOnly.FromDateTime(DateTime.Today);
        bookDialog?.Open();
    }
    
    private async Task BekræftBooking()
    {
        if (valgtItem != null)
        {
            valgtItem.reserveret = true; //ændrer reserveret til true
            valgtItem.slutDato = valgtDato; //sætter slutdato til den valgte dato i kalenderen
            await cService.BookItem(valgtItem, valgtDato); //sender til service, som opdaterer med valgte værdier
            bookDialog?.Close();
            await GetAll();
        }
    }

    private async Task Filter(string? type, string? farve, string? størrelse, bruger? udlåner, bool? ledig)
    {
        //await cService.FilterBy();
    }
}