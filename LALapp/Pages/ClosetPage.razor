@using Core
@using LALapp.Components
@inject NavigationManager navManager
@inject ILoginService lService
@inject IClosetService cService
@page "/closetPage"

<h3>F√¶llesSkabet</h3>
<h5>Din garderobe ‚Äì samlet √©t sted üëö</h5>
<p class="closet-intro">
    P√• denne side kan du tilf√∏je, redigere og dele dine egne t√∏jitems med dine veninder. 
    Du kan ogs√• booke andres t√∏j og v√¶lge, hvorn√•r du afleverer det igen. 
    Hold styr p√• dine l√•n og udl√•n ‚Äì alt sammen direkte i din egen digitale garderobe.
</p>

<ModalDialog @ref="@addToDialog" Title="@(isEditMode ? "Rediger dette stykke t√∏j" : "Tilf√∏j nyt stykke t√∏j")">
    <EditForm Model="@aItem" OnValidSubmit="@HandleSubmit" class="row p-3">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="kategori">Kategori</label>
            <InputSelect id="kategori" @bind-Value="aItem.type" class="form-control">
                @foreach (var anOption in options)
                {
                    <option value="@anOption">@anOption</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>St√∏rrelse</label>
            <InputText @bind-Value="aItem.st√∏rrelse" class="form-control" />
        </div>
        <div class="form-group">
            <label>Farve</label>
            <InputText @bind-Value="aItem.farve" class="form-control" />
        </div>
        <div class="form-group">
            <label>M√¶rke</label>
            <InputText @bind-Value="aItem.m√¶rke" class="form-control" />
        </div>
        <div class="form-group checkbox-group">
            <label class="custom-checkbox">
                <input type="checkbox" @bind="aItem.reserveret" />
                <span class="checkmark"></span>
                Reserveret?
            </label>
        </div>
        <div class="form-group">
            <label>Beskrivelse</label>
            <InputTextArea @bind-Value="aItem.beskrivelse" class="form-control" />
        </div>
        <div class="form-group">
            <label>Billede URL</label>
            <InputText @bind-Value="aItem.img" class="form-control" />
        </div>
        <div class="form-footer">
            <button type="submit" class="submit-button">
                @((isEditMode ? "Gem √¶ndringer" : "Tilf√∏j"))
            </button>
        </div>
    </EditForm>
</ModalDialog>

<div class="item-grid">
    @foreach (var item in items)
    {
        <div class="item-card">
            @if (!string.IsNullOrWhiteSpace(item.img))
            {
                <img src="@item.img" alt="T√∏jbillede" class="item-image" />
            }
            <div class="item-info">
                <p><strong>Type:</strong> @item.type</p>
                <p><strong>St√∏rrelse:</strong> @item.st√∏rrelse</p>
                <p><strong>Farve:</strong> @item.farve</p>
                <p><strong>M√¶rke:</strong> @item.m√¶rke</p>
                <p><strong>Beskrivelse:</strong> @item.beskrivelse</p>
                <p><strong>Status:</strong> @(item.reserveret ? "Reserveret indtil d. " + item.slutDato?.ToShortDateString() : "Ledig")</p>
                <p><strong>Ejer:</strong> @item.ejer.brugernavn (@item.ejer.mobil)</p>
            </div>
            <div class="item-actions">
                @if (loggedIn?.id == item.ejer?.id)
                {
                    <button class="delete-button" @onclick="() => Delete(item)">Slet</button>
                    <button class="edit-button" @onclick="() => Update(item)">Rediger</button>
                }
                else if (!item.reserveret)
                {
                    <button class="book-button" @onclick="() => Book(item)">Book</button>
                }
            </div>
        </div>
    }
</div>

<button class="add-button" @onclick="Open">Tilf√∏j nyt t√∏j</button>

<ModalDialog @ref="@bookDialog" Title="V√¶lg afleveringsdato">
    <div class="p-3">
        <label for="slutDato">Afleveringsdato:</label>
        <InputDate @bind-Value="valgtDato" id="slutDato" class="form-control" />
        <div class="mt-3">
            <button @onclick="Bekr√¶ftBooking">Bekr√¶ft</button>
        </div>
    </div>
</ModalDialog>

@code {
    ModalDialog? addToDialog { get; set; }
    private t√∏j aItem = new();
    private string[] options = { "Overdele", "Bukser", "Nederdele", "Kjoler", "Andet" };
    private List<t√∏j> items = new();
    private bool isEditMode = false;
    private bruger? loggedIn;
    ModalDialog? bookDialog { get; set; }
    private DateTime? valgtDato = DateTime.Today;
    private t√∏j? valgtItem;

    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();
        if (loggedIn == null)
        {
            navManager.NavigateTo("loginPage/closetPage");
            return;
        }
        await GetAll();
    }

    private void Open()
    {
        isEditMode = false;
        aItem = new t√∏j();
        addToDialog.Open();
    }

    private async Task GetAll()
    {
        t√∏j[] items2 = await cService.GetAll();
        items = items2.ToList();
    }

    private async Task HandleSubmit()
    {
        if (isEditMode)
        {
            await cService.UpdateItem(aItem);
        }
        else
        {
            aItem.ejer = loggedIn;
            await cService.AddItem(aItem);
        }

        aItem = new t√∏j();
        addToDialog.Close();
        await GetAll();
    }

    private async Task Delete(t√∏j item)
    {
        await cService.DeleteById(item.id);
        await GetAll();
    }

    private async Task Update(t√∏j item)
    {
        isEditMode = true;
        aItem = item;
        addToDialog.Open();
    }

    private async Task Book(t√∏j item)
    {
        valgtItem = item;
        valgtDato = DateTime.Today;
        bookDialog?.Open();
    }

    private async Task Bekr√¶ftBooking()
    {
        if (valgtItem != null)
        {
            valgtItem.reserveret = true;
            valgtItem.slutDato = valgtDato;
            await cService.BookItem(valgtItem, valgtDato);
            bookDialog?.Close();
            await GetAll();
        }
    }

    private async Task Filter(string? type, string? farve, string? st√∏rrelse, bruger? udl√•ner, bool? ledig)
    {
        //await cService.FilterBy();
    }
}
