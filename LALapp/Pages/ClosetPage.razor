@using Core
@using LALapp.Components
@inject NavigationManager navManager
@inject ILoginService lService
@inject IClosetService cService
@page "/closetPage"
<h3>F√¶llesSkabet</h3>
<h5>Din garderobe ‚Äì samlet √©t sted üëö</h5>

P√• denne side kan du tilf√∏je, redigere og dele dine egne t√∏jitems med dine veninder. 
Du kan ogs√• booke andres t√∏j og v√¶lge, hvorn√•r du afleverer det igen. 
Hold styr p√• dine l√•n og udl√•n ‚Äì alt sammen direkte i din egen digitale garderobe.

<ModalDialog @ref="@addToDialog" Title="@(isEditMode ? "Rediger dette stykke t√∏j" : "Tilf√∏j nyt stykke t√∏j")">
    <EditForm Model="@aItem" OnValidSubmit="@HandleSubmit" class="row p-3">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="kategori"> Kategori</label>
            <InputSelect id="kategori" @bind-Value="aItem.type" class="form-control">
                @foreach (var anOption in options)
                {
                    <option value="@anOption">@anOption</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="St√∏rrelse">St√∏rrelse</label>
            <InputText id="St√∏rrelse" @bind-Value="aItem.st√∏rrelse" class="form-control" />
        </div>
        <div class="form-group">
            <label for="Farve">Farve</label>
            <InputText id="Farve" @bind-Value="aItem.farve" class="form-control" />
        </div>
        <div class="form-group">
            <label for="M√¶rke">M√¶rke</label>
            <InputText id="M√¶rke" @bind-Value="aItem.m√¶rke" class="form-control" />
        </div>
        <div class="form-group checkbox-group">
            <label class="custom-checkbox">
                <input type="checkbox" @bind="aItem.reserveret" />
                <span class="checkmark"></span>
                Reserveret?
            </label>
        </div>
        <div class="form group">
            <label for="Description">Beskrivelse</label>
            <InputTextArea id="Description" @bind-Value="aItem.beskrivelse" class="form-control" />
        </div>
        <div class="form-group">
            <label for="Link">Billede URL</label>
            <InputText id="Link" @bind-Value="aItem.img" class="form-control" />
        </div>
        <div class="form-footer">
            <button type="submit" class="submit-button">
                @((isEditMode ? "Gem √¶ndringer" : "Tilf√∏j"))
            </button>
        </div>
    </EditForm>
</ModalDialog>


<table class="table">
    <thead>
    <tr> <!-- her skal noget filter p√•-->
        <th>Type</th>
        <th>St√∏rrelse</th>
        <th>Farve</th>
        <th>M√¶rke</th>
        <th>Beskrivelse</th>
        <th>Ledighed</th>
        <th>Ejet af</th>
        <th>Billede</th>
        <th></th>
        <th></th>
    </tr>
    </thead> 
    <tbody>
    @foreach (var item in items)
    {
        <tr>
            <td>@item.type</td>
            <td>@item.st√∏rrelse</td>
            <td>@item.farve</td>
            <td>@item.m√¶rke</td>
            <td>@item.beskrivelse</td>
            <td>@(@item.reserveret ? "Ikke ledig" : "Ledig")
                @if (item.reserveret == true)
                {
                    <p>Ledig igen d. @item.slutDato;</p>
                }
            </td>
            <td> @item.ejer.brugernavn
                @item.ejer.mobil</td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.img))
                {
                    <img src="@item.img" alt="T√∏jbillede" class="item-image" />
                }
            </td>
            
            @if (loggedIn?.id == item.ejer?.id)
            {
                <td><button class="delete-button" @onclick="() => Delete(item)">Slet denne item</button></td>
                <td><button class="edit-button" @onclick="() => Update(item)">Rediger denne item</button></td>
            }
            else
            {
                @if (item.reserveret == false)
                {
                    <td><button class="book-button" @onclick="() => Book(item)">Book denne item</button></td>
                }
            }
        </tr>
    }
    </tbody>
</table>

<button class="add-button" @onclick="Open">Tilf√∏j nyt t√∏j</button>

<ModalDialog @ref="@bookDialog" Title="V√¶lg afleveringsdato">
    <div class="p-3">
        <label for="slutDato">Afleveringsdato:</label>
        <InputDate @bind-Value="valgtDato" id="slutDato" class="form-control" />
        <div class="mt-3">
            <button @onclick="Bekr√¶ftBooking">Bekr√¶ft</button>
        </div>
    </div>
</ModalDialog>

@code {
    ModalDialog? addToDialog { get; set; }
    private t√∏j aItem = new();
    private string[] options = { "Overdele", "Bukser", "Nederdele", "Kjoler", "Andet" };
    private List<t√∏j> items = new();
    private bool isEditMode = false; //bruges til at skelne mellem tilf√∏j og rediger item
    private bruger? loggedIn; //gemmer den bruger som er logget ind
    ModalDialog? bookDialog { get; set; }
    private DateTime? valgtDato = DateTime.Today;
    private t√∏j? valgtItem;

    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();
        if (loggedIn == null)
        {
            navManager.NavigateTo("loginPage/closetPage");
            return;
        }

        await GetAll();
    }

    private void Open()
    {
        isEditMode = false;
        aItem = new t√∏j();
        addToDialog.Open();
    }

    private async Task GetAll()
    {
        t√∏j[] items2 = await cService.GetAll();
        items = items2.ToList();
    }

    private async Task HandleSubmit()
    {
        if (isEditMode == true) //hvis vi er i redigerings "mode" sker dette
        {
            await cService.UpdateItem(aItem);
        }
        else //hvis vi er i tilf√∏jelses "mode" sker dette
        {
            items.Add(aItem); //bethandler visningen
            aItem.ejer = loggedIn;
            await cService.AddItem(aItem);
        }

        aItem = new t√∏j();
        addToDialog.Close();
        await GetAll();
    }

    private async Task Delete(t√∏j item)
    {
        items.Remove(item); //behandler visningen
        await cService.DeleteById(item.id);
    }

    private async Task Update(t√∏j item)
    {
        isEditMode = true;
        aItem = item;
        addToDialog.Open();
    }

    private async Task Book(t√∏j item)
    {
        valgtItem = item;
        valgtDato = DateTime.Today;
        bookDialog?.Open();
    }

    private async Task Bekr√¶ftBooking()
    {
        if (valgtItem != null)
        {
            valgtItem.reserveret = true; //√¶ndrer reserveret til true
            valgtItem.slutDato = valgtDato; //s√¶tter slutdato til den valgte dato i kalenderen
            await cService.BookItem(valgtItem, valgtDato); //sender til service, som opdaterer med valgte v√¶rdier
            bookDialog?.Close();
            await GetAll();
        }
    }

    private async Task Filter(string? type, string? farve, string? st√∏rrelse, bruger? udl√•ner, bool? ledig)
    {
        //await cService.FilterBy();
    }

}